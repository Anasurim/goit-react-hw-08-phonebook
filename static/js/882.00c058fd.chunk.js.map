{"version":3,"file":"static/js/882.00c058fd.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactFor.module.css?c6db","app/selectors.js","components/ContactForm/ContactForm.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactFor_form__n3gBy\",\"formLabel\":\"ContactFor_formLabel__hWcoP\",\"formInput\":\"ContactFor_formInput__PVK-+\",\"formButton\":\"ContactFor_formButton__F0MT5\"};","export const selectContacts = state => state.contacts.items;\nexport const selectStatusFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","// import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport css from '../ContactForm/ContactFor.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../app/operations';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { selectContacts } from '../../app/selectors';\n\nexport function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n    const newContact = {\n      name: e.target.elements.name.value,\n      number: e.target.elements.number.value,\n    };\n    const isNameExists = contacts.some(\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n\n    if (isNameExists) {\n      Notify.failure(`${newContact.name} already exists.`);\n    } else {\n      dispatch(addContact(newContact));\n    }\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      <label className={css.formLabel}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          className={css.formInput}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={css.formLabel}>\n        Phone\n        <input\n          type=\"tel\"\n          name=\"number\"\n          className={css.formInput}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={css.formButton}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.number.isRequired,\n    })\n  ),\n  filter: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"listItem\":\"ContactList_listItem__SptUx\",\"listName\":\"ContactList_listName__f7TzU\",\"listButton\":\"ContactList_listButton__UqBsU\"};","// import { useEffect } from 'react';\nimport css from '../ContactList/ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from '../../app/operations';\nimport { selectContacts, selectStatusFilter } from '../../app/selectors';\n\nexport function ContactList() {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectStatusFilter);\n  const contacts = useSelector(selectContacts);\n\n  const normalizedFilter = filter.toLowerCase().trim();\n  const filterContacts = contacts.filter(contact => {\n    return contact.name.toLowerCase().includes(normalizedFilter);\n  });\n\n  // useEffect(() => {\n  //   dispatch(fetchContacts());\n  // }, [dispatch]);\n\n  return (\n    <ul className={css.contactList}>\n      {filterContacts.map(({ id, name, number }) => {\n        return (\n          <li key={id} className={css.listItem}>\n            <p className={css.listName}>\n              {name}: {number}\n            </p>\n\n            <button\n              type=\"button\"\n              onClick={() => dispatch(deleteContact(id))}\n              className={css.listButton}\n            >\n              Delete contact\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"filterabel\":\"Filter_filterabel__-QS71\",\"filterTitle\":\"Filter_filterTitle__5SDqd\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import React from 'react';\nimport css from '../Filter/Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from '../../app/filterSlice';\n\nexport function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter);\n\n  const onChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n  return (\n    <label className={css.filterLabel}>\n      <span className={css.filterTitle}>Find contacts by name</span>\n      <input\n        type=\"text\"\n        value={filter}\n        onChange={onChange}\n        className={css.filterInput}\n      ></input>\n    </label>\n  );\n}\n","import { ContactForm } from '../components/ContactForm/ContactForm';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { Filter } from '../components/Filter/Filter';\nimport { useSelector } from 'react-redux';\nimport { selectError, selectIsLoading } from '../app/selectors';\nimport Spinner from '../components/Spinner/Spinner';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'app/operations';\n\nexport default function Contacts() {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && !error && <Spinner />}\n      <ContactList />\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectStatusFilter","filter","selectIsLoading","isLoading","selectError","error","ContactForm","dispatch","useDispatch","useSelector","onSubmit","e","preventDefault","form","currentTarget","newContact","name","target","elements","value","number","some","contact","toLowerCase","Notify","addContact","reset","className","css","type","pattern","title","required","ContactList","normalizedFilter","trim","filterContacts","includes","map","id","onClick","deleteContact","Filter","onChange","setFilter","Contacts","useEffect","fetchContacts","Spinner"],"sourceRoot":""}